version: '3.4'

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "./zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-tier
  kafka:
    image: docker.io/bitnami/kafka
    ports:
      - "9092:9092"
    links:
      - "zookeeper"
    volumes:
      - "./kafka_data:/bitnami"
    environment:      
      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - app-tier
  
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    links:
      - "kafka"
    environment:    
      - KAFKA_BROKERCONNECT=PLAINTEXT://kafka:9092
      - JVM_OPTS=-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify
    depends_on:
      - zookeeper
      - kafka
    networks:
      - app-tier

  orderprocessor:
    image: ${DOCKER_REGISTRY-}orderprocessor
    build:
      context: .
      dockerfile: OrderProcessor/Dockerfile
    depends_on:
     - orderservice
    volumes:
     - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
     - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - app-tier

  orderservice:
    image: ${DOCKER_REGISTRY-}orderservice
    ports:
     - "5052:443"
     - "5053:80"
    extra_hosts:
     - "host.docker.internal:host-gateway"
    volumes:
     - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
     - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    networks:
      - app-tier

  productservice:
    image: ${DOCKER_REGISTRY-}productservice
    ports:
     - "5054:443"
     - "5055:80"
    extra_hosts:
     - "host.docker.internal:host-gateway"
    volumes:
     - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
     - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    build:
      context: .
      dockerfile: ProductService/Dockerfile
    networks:
      - app-tier

  userservice:
    image: ${DOCKER_REGISTRY-}userservice
    ports:
     - "5050:443"
     - "5051:80"
    extra_hosts:
     - "host.docker.internal:host-gateway"
    volumes:
     - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
     - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:r
    build:
      context: .
      dockerfile: UserService/Dockerfile
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local